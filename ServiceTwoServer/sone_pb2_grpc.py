# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import sone_pb2 as sone__pb2


class ServiceOneStub(object):
  """The greeting service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ProductDiscount = channel.unary_unary(
        '/sone.ServiceOne/ProductDiscount',
        request_serializer=sone__pb2.ProductRequest.SerializeToString,
        response_deserializer=sone__pb2.Product.FromString,
        )


class ServiceOneServicer(object):
  """The greeting service definition.
  """

  def ProductDiscount(self, request, context):
    """Sends a greeting
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ServiceOneServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ProductDiscount': grpc.unary_unary_rpc_method_handler(
          servicer.ProductDiscount,
          request_deserializer=sone__pb2.ProductRequest.FromString,
          response_serializer=sone__pb2.Product.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'sone.ServiceOne', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
